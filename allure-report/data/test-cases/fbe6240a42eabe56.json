{"uid":"fbe6240a42eabe56","name":"Should log in successfully and view all meter data list to create new meter group data","fullName":"Meters Module - Create New Meter Group Data.Should log in successfully and view all meter data list to create new meter group data","historyId":"129464ec541067f8d99a77a733ceb01f","time":{"start":1738167023145,"stop":1738167023979,"duration":834},"description":"","descriptionHtml":"","status":"broken","statusMessage":"Cypress detected that you returned a promise from a command while also invoking one or more cy commands in that promise.\n                \n                The command that returned the promise was:\n                \n                  > `cy.visit()`\n                \n                The cy command you invoked inside the promise was:\n                \n                  > `cy.task()`\n                \n                Because Cypress commands are already promise-like, you don't need to wrap them or return your own promise.\n                \n                Cypress will resolve your command with whatever the final Cypress command yields.\n                \n                The reason this is an error instead of a warning is because Cypress internally queues commands serially whereas Promises execute as soon as they are invoked. Attempting to reconcile this would prevent Cypress from ever resolving.\n                \n                https://on.cypress.io/returning-promise-and-commands-in-another-command\n                \n                Because this error occurred during a `after all` hook we are skipping all of the remaining tests.","statusTrace":"CypressError: Cypress detected that you returned a promise from a command while also invoking one or more cy commands in that promise.\n                \n                The command that returned the promise was:\n                \n                  > `cy.visit()`\n                \n                The cy command you invoked inside the promise was:\n                \n                  > `cy.task()`\n                \n                Because Cypress commands are already promise-like, you don't need to wrap them or return your own promise.\n                \n                Cypress will resolve your command with whatever the final Cypress command yields.\n                \n                The reason this is an error instead of a warning is because Cypress internally queues commands serially whereas Promises execute as soon as they are invoked. Attempting to reconcile this would prevent Cypress from ever resolving.\n                \n                https://on.cypress.io/returning-promise-and-commands-in-another-command\n                \n                Because this error occurred during a `after all` hook we are skipping all of the remaining tests.\n                    at cy.<computed> [as task] (https://cmms.dev.aegislabs.work/__cypress/runner/cypress_runner.js:137943:64)\n                    at lt.flushAllureMessagesToTask (webpack://pln_cmms/./node_modules/allure-cypress/dist/cjs/index.js:1:16036)\n                    at nt (webpack://pln_cmms/./node_modules/allure-cypress/dist/cjs/index.js:1:17798)\n                    at Context.Fr (webpack://pln_cmms/./node_modules/allure-cypress/dist/cjs/index.js:1:12326)\n                From Your Spec Code:\n                    at Context.eval (webpack://pln_cmms/./cypress/e2e/metergroup_module/create-newdata.cy.js:3:11)","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"suite","value":"Meters Module - Create New Meter Group Data"},{"name":"testClass","value":"Meters Module - Create New Meter Group Data"},{"name":"testMethod","value":"Should log in successfully and view all meter data list to create new meter group data"},{"name":"package","value":"Meters Module - Create New Meter Group Data"},{"name":"resultFormat","value":"allure1"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"fbe6240a42eabe56.json","parameterValues":[]}